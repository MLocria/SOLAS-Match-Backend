// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserTaskStreamNotificationRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserTaskStreamNotificationRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Requests {

namespace {

const ::google::protobuf::Descriptor* UserTaskStreamNotificationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserTaskStreamNotificationRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UserTaskStreamNotificationRequest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_UserTaskStreamNotificationRequest_2eproto() {
  protobuf_AddDesc_UserTaskStreamNotificationRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UserTaskStreamNotificationRequest.proto");
  GOOGLE_CHECK(file != NULL);
  UserTaskStreamNotificationRequest_descriptor_ = file->message_type(0);
  static const int UserTaskStreamNotificationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTaskStreamNotificationRequest, class_name_),
  };
  UserTaskStreamNotificationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserTaskStreamNotificationRequest_descriptor_,
      UserTaskStreamNotificationRequest::default_instance_,
      UserTaskStreamNotificationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTaskStreamNotificationRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(UserTaskStreamNotificationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTaskStreamNotificationRequest, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UserTaskStreamNotificationRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserTaskStreamNotificationRequest_descriptor_, &UserTaskStreamNotificationRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UserTaskStreamNotificationRequest_2eproto() {
  delete UserTaskStreamNotificationRequest::default_instance_;
  delete UserTaskStreamNotificationRequest_reflection_;
  delete UserTaskStreamNotificationRequest::_default_class_name_;
}

void protobuf_AddDesc_UserTaskStreamNotificationRequest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_UserTaskStreamNotificationRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'UserTaskStreamNotificationRequest.prot"
    "o\022$SolasMatch.Common.Protobufs.Requests\""
    "Z\n!UserTaskStreamNotificationRequest\0225\n\n"
    "class_name\030\001 \002(\t:!UserTaskStreamNotifica"
    "tionRequest", 171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserTaskStreamNotificationRequest.proto", &protobuf_RegisterTypes);
  UserTaskStreamNotificationRequest::_default_class_name_ =
      new ::std::string("UserTaskStreamNotificationRequest", 33);
  UserTaskStreamNotificationRequest::default_instance_ = new UserTaskStreamNotificationRequest();
  UserTaskStreamNotificationRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UserTaskStreamNotificationRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UserTaskStreamNotificationRequest_2eproto {
  StaticDescriptorInitializer_UserTaskStreamNotificationRequest_2eproto() {
    protobuf_AddDesc_UserTaskStreamNotificationRequest_2eproto();
  }
} static_descriptor_initializer_UserTaskStreamNotificationRequest_2eproto_;

// ===================================================================

::std::string* UserTaskStreamNotificationRequest::_default_class_name_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserTaskStreamNotificationRequest::kClassNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserTaskStreamNotificationRequest::UserTaskStreamNotificationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
}

void UserTaskStreamNotificationRequest::InitAsDefaultInstance() {
}

UserTaskStreamNotificationRequest::UserTaskStreamNotificationRequest(const UserTaskStreamNotificationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
}

void UserTaskStreamNotificationRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  class_name_.UnsafeSetDefault(_default_class_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserTaskStreamNotificationRequest::~UserTaskStreamNotificationRequest() {
  // @@protoc_insertion_point(destructor:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  SharedDtor();
}

void UserTaskStreamNotificationRequest::SharedDtor() {
  class_name_.DestroyNoArena(_default_class_name_);
  if (this != default_instance_) {
  }
}

void UserTaskStreamNotificationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserTaskStreamNotificationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserTaskStreamNotificationRequest_descriptor_;
}

const UserTaskStreamNotificationRequest& UserTaskStreamNotificationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserTaskStreamNotificationRequest_2eproto();
  return *default_instance_;
}

UserTaskStreamNotificationRequest* UserTaskStreamNotificationRequest::default_instance_ = NULL;

UserTaskStreamNotificationRequest* UserTaskStreamNotificationRequest::New(::google::protobuf::Arena* arena) const {
  UserTaskStreamNotificationRequest* n = new UserTaskStreamNotificationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserTaskStreamNotificationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  if (has_class_name()) {
    class_name_.ClearToDefaultNoArena(_default_class_name_);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UserTaskStreamNotificationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string class_name = 1 [default = "UserTaskStreamNotificationRequest"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_name().data(), this->class_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  return false;
#undef DO_
}

void UserTaskStreamNotificationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  // required string class_name = 1 [default = "UserTaskStreamNotificationRequest"];
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
}

::google::protobuf::uint8* UserTaskStreamNotificationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  // required string class_name = 1 [default = "UserTaskStreamNotificationRequest"];
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  return target;
}

int UserTaskStreamNotificationRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  int total_size = 0;

  // required string class_name = 1 [default = "UserTaskStreamNotificationRequest"];
  if (has_class_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserTaskStreamNotificationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserTaskStreamNotificationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserTaskStreamNotificationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
    MergeFrom(*source);
  }
}

void UserTaskStreamNotificationRequest::MergeFrom(const UserTaskStreamNotificationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_name()) {
      set_has_class_name();
      class_name_.AssignWithDefault(_default_class_name_, from.class_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UserTaskStreamNotificationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserTaskStreamNotificationRequest::CopyFrom(const UserTaskStreamNotificationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserTaskStreamNotificationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UserTaskStreamNotificationRequest::Swap(UserTaskStreamNotificationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserTaskStreamNotificationRequest::InternalSwap(UserTaskStreamNotificationRequest* other) {
  class_name_.Swap(&other->class_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserTaskStreamNotificationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserTaskStreamNotificationRequest_descriptor_;
  metadata.reflection = UserTaskStreamNotificationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserTaskStreamNotificationRequest

// required string class_name = 1 [default = "UserTaskStreamNotificationRequest"];
bool UserTaskStreamNotificationRequest::has_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserTaskStreamNotificationRequest::set_has_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
void UserTaskStreamNotificationRequest::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserTaskStreamNotificationRequest::clear_class_name() {
  class_name_.ClearToDefaultNoArena(_default_class_name_);
  clear_has_class_name();
}
 const ::std::string& UserTaskStreamNotificationRequest::class_name() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
  return class_name_.GetNoArena(_default_class_name_);
}
 void UserTaskStreamNotificationRequest::set_class_name(const ::std::string& value) {
  set_has_class_name();
  class_name_.SetNoArena(_default_class_name_, value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
}
 void UserTaskStreamNotificationRequest::set_class_name(const char* value) {
  set_has_class_name();
  class_name_.SetNoArena(_default_class_name_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
}
 void UserTaskStreamNotificationRequest::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  class_name_.SetNoArena(_default_class_name_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
}
 ::std::string* UserTaskStreamNotificationRequest::mutable_class_name() {
  set_has_class_name();
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
  return class_name_.MutableNoArena(_default_class_name_);
}
 ::std::string* UserTaskStreamNotificationRequest::release_class_name() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
  clear_has_class_name();
  return class_name_.ReleaseNoArena(_default_class_name_);
}
 void UserTaskStreamNotificationRequest::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    set_has_class_name();
  } else {
    clear_has_class_name();
  }
  class_name_.SetAllocatedNoArena(_default_class_name_, class_name);
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Requests.UserTaskStreamNotificationRequest.class_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Requests
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)
