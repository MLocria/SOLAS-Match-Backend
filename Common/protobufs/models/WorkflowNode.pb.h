// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorkflowNode.proto

#ifndef PROTOBUF_WorkflowNode_2eproto__INCLUDED
#define PROTOBUF_WorkflowNode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Task.pb.h"
// @@protoc_insertion_point(includes)

namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Models {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_WorkflowNode_2eproto();
void protobuf_AssignDesc_WorkflowNode_2eproto();
void protobuf_ShutdownFile_WorkflowNode_2eproto();

class WorkflowNode;

// ===================================================================

class WorkflowNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SolasMatch.Common.Protobufs.Models.WorkflowNode) */ {
 public:
  WorkflowNode();
  virtual ~WorkflowNode();

  WorkflowNode(const WorkflowNode& from);

  inline WorkflowNode& operator=(const WorkflowNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowNode& default_instance();

  void Swap(WorkflowNode* other);

  // implements Message ----------------------------------------------

  inline WorkflowNode* New() const { return New(NULL); }

  WorkflowNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkflowNode& from);
  void MergeFrom(const WorkflowNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkflowNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 taskId = 1;
  bool has_taskid() const;
  void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // optional .SolasMatch.Common.Protobufs.Models.Task task = 2;
  bool has_task() const;
  void clear_task();
  static const int kTaskFieldNumber = 2;
  const ::SolasMatch::Common::Protobufs::Models::Task& task() const;
  ::SolasMatch::Common::Protobufs::Models::Task* mutable_task();
  ::SolasMatch::Common::Protobufs::Models::Task* release_task();
  void set_allocated_task(::SolasMatch::Common::Protobufs::Models::Task* task);

  // repeated int32 next = 3;
  int next_size() const;
  void clear_next();
  static const int kNextFieldNumber = 3;
  ::google::protobuf::int32 next(int index) const;
  void set_next(int index, ::google::protobuf::int32 value);
  void add_next(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      next() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_next();

  // repeated int32 previous = 4;
  int previous_size() const;
  void clear_previous();
  static const int kPreviousFieldNumber = 4;
  ::google::protobuf::int32 previous(int index) const;
  void set_previous(int index, ::google::protobuf::int32 value);
  void add_previous(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      previous() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_previous();

  // @@protoc_insertion_point(class_scope:SolasMatch.Common.Protobufs.Models.WorkflowNode)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SolasMatch::Common::Protobufs::Models::Task* task_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > next_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > previous_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_WorkflowNode_2eproto();
  friend void protobuf_AssignDesc_WorkflowNode_2eproto();
  friend void protobuf_ShutdownFile_WorkflowNode_2eproto();

  void InitAsDefaultInstance();
  static WorkflowNode* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkflowNode

// required int32 taskId = 1;
inline bool WorkflowNode::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkflowNode::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkflowNode::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkflowNode::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 WorkflowNode::taskid() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowNode.taskId)
  return taskid_;
}
inline void WorkflowNode::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.WorkflowNode.taskId)
}

// optional .SolasMatch.Common.Protobufs.Models.Task task = 2;
inline bool WorkflowNode::has_task() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkflowNode::set_has_task() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkflowNode::clear_has_task() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkflowNode::clear_task() {
  if (task_ != NULL) task_->::SolasMatch::Common::Protobufs::Models::Task::Clear();
  clear_has_task();
}
inline const ::SolasMatch::Common::Protobufs::Models::Task& WorkflowNode::task() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowNode.task)
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::SolasMatch::Common::Protobufs::Models::Task* WorkflowNode::mutable_task() {
  set_has_task();
  if (task_ == NULL) {
    task_ = new ::SolasMatch::Common::Protobufs::Models::Task;
  }
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Models.WorkflowNode.task)
  return task_;
}
inline ::SolasMatch::Common::Protobufs::Models::Task* WorkflowNode::release_task() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Models.WorkflowNode.task)
  clear_has_task();
  ::SolasMatch::Common::Protobufs::Models::Task* temp = task_;
  task_ = NULL;
  return temp;
}
inline void WorkflowNode::set_allocated_task(::SolasMatch::Common::Protobufs::Models::Task* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Models.WorkflowNode.task)
}

// repeated int32 next = 3;
inline int WorkflowNode::next_size() const {
  return next_.size();
}
inline void WorkflowNode::clear_next() {
  next_.Clear();
}
inline ::google::protobuf::int32 WorkflowNode::next(int index) const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowNode.next)
  return next_.Get(index);
}
inline void WorkflowNode::set_next(int index, ::google::protobuf::int32 value) {
  next_.Set(index, value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.WorkflowNode.next)
}
inline void WorkflowNode::add_next(::google::protobuf::int32 value) {
  next_.Add(value);
  // @@protoc_insertion_point(field_add:SolasMatch.Common.Protobufs.Models.WorkflowNode.next)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkflowNode::next() const {
  // @@protoc_insertion_point(field_list:SolasMatch.Common.Protobufs.Models.WorkflowNode.next)
  return next_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkflowNode::mutable_next() {
  // @@protoc_insertion_point(field_mutable_list:SolasMatch.Common.Protobufs.Models.WorkflowNode.next)
  return &next_;
}

// repeated int32 previous = 4;
inline int WorkflowNode::previous_size() const {
  return previous_.size();
}
inline void WorkflowNode::clear_previous() {
  previous_.Clear();
}
inline ::google::protobuf::int32 WorkflowNode::previous(int index) const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowNode.previous)
  return previous_.Get(index);
}
inline void WorkflowNode::set_previous(int index, ::google::protobuf::int32 value) {
  previous_.Set(index, value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.WorkflowNode.previous)
}
inline void WorkflowNode::add_previous(::google::protobuf::int32 value) {
  previous_.Add(value);
  // @@protoc_insertion_point(field_add:SolasMatch.Common.Protobufs.Models.WorkflowNode.previous)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkflowNode::previous() const {
  // @@protoc_insertion_point(field_list:SolasMatch.Common.Protobufs.Models.WorkflowNode.previous)
  return previous_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkflowNode::mutable_previous() {
  // @@protoc_insertion_point(field_mutable_list:SolasMatch.Common.Protobufs.Models.WorkflowNode.previous)
  return &previous_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorkflowNode_2eproto__INCLUDED
