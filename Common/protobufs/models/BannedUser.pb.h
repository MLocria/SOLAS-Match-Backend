// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BannedUser.proto

#ifndef PROTOBUF_BannedUser_2eproto__INCLUDED
#define PROTOBUF_BannedUser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Models {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_BannedUser_2eproto();
void protobuf_AssignDesc_BannedUser_2eproto();
void protobuf_ShutdownFile_BannedUser_2eproto();

class BannedUser;

// ===================================================================

class BannedUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SolasMatch.Common.Protobufs.Models.BannedUser) */ {
 public:
  BannedUser();
  virtual ~BannedUser();

  BannedUser(const BannedUser& from);

  inline BannedUser& operator=(const BannedUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BannedUser& default_instance();

  void Swap(BannedUser* other);

  // implements Message ----------------------------------------------

  inline BannedUser* New() const { return New(NULL); }

  BannedUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BannedUser& from);
  void MergeFrom(const BannedUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BannedUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 userIdAdmin = 2;
  bool has_useridadmin() const;
  void clear_useridadmin();
  static const int kUserIdAdminFieldNumber = 2;
  ::google::protobuf::int32 useridadmin() const;
  void set_useridadmin(::google::protobuf::int32 value);

  // optional int32 banType = 3;
  bool has_bantype() const;
  void clear_bantype();
  static const int kBanTypeFieldNumber = 3;
  ::google::protobuf::int32 bantype() const;
  void set_bantype(::google::protobuf::int32 value);

  // optional string comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional string bannedDate = 5;
  bool has_banneddate() const;
  void clear_banneddate();
  static const int kBannedDateFieldNumber = 5;
  const ::std::string& banneddate() const;
  void set_banneddate(const ::std::string& value);
  void set_banneddate(const char* value);
  void set_banneddate(const char* value, size_t size);
  ::std::string* mutable_banneddate();
  ::std::string* release_banneddate();
  void set_allocated_banneddate(::std::string* banneddate);

  // @@protoc_insertion_point(class_scope:SolasMatch.Common.Protobufs.Models.BannedUser)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_useridadmin();
  inline void clear_has_useridadmin();
  inline void set_has_bantype();
  inline void clear_has_bantype();
  inline void set_has_comment();
  inline void clear_has_comment();
  inline void set_has_banneddate();
  inline void clear_has_banneddate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 useridadmin_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::internal::ArenaStringPtr banneddate_;
  ::google::protobuf::int32 bantype_;
  friend void  protobuf_AddDesc_BannedUser_2eproto();
  friend void protobuf_AssignDesc_BannedUser_2eproto();
  friend void protobuf_ShutdownFile_BannedUser_2eproto();

  void InitAsDefaultInstance();
  static BannedUser* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BannedUser

// optional int32 userId = 1;
inline bool BannedUser::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BannedUser::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BannedUser::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BannedUser::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 BannedUser::userid() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.BannedUser.userId)
  return userid_;
}
inline void BannedUser::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.BannedUser.userId)
}

// optional int32 userIdAdmin = 2;
inline bool BannedUser::has_useridadmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BannedUser::set_has_useridadmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BannedUser::clear_has_useridadmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BannedUser::clear_useridadmin() {
  useridadmin_ = 0;
  clear_has_useridadmin();
}
inline ::google::protobuf::int32 BannedUser::useridadmin() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.BannedUser.userIdAdmin)
  return useridadmin_;
}
inline void BannedUser::set_useridadmin(::google::protobuf::int32 value) {
  set_has_useridadmin();
  useridadmin_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.BannedUser.userIdAdmin)
}

// optional int32 banType = 3;
inline bool BannedUser::has_bantype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BannedUser::set_has_bantype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BannedUser::clear_has_bantype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BannedUser::clear_bantype() {
  bantype_ = 0;
  clear_has_bantype();
}
inline ::google::protobuf::int32 BannedUser::bantype() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.BannedUser.banType)
  return bantype_;
}
inline void BannedUser::set_bantype(::google::protobuf::int32 value) {
  set_has_bantype();
  bantype_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.BannedUser.banType)
}

// optional string comment = 4;
inline bool BannedUser::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BannedUser::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BannedUser::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BannedUser::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& BannedUser::comment() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BannedUser::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
}
inline void BannedUser::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
}
inline void BannedUser::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
}
inline ::std::string* BannedUser::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BannedUser::release_comment() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BannedUser::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Models.BannedUser.comment)
}

// optional string bannedDate = 5;
inline bool BannedUser::has_banneddate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BannedUser::set_has_banneddate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BannedUser::clear_has_banneddate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BannedUser::clear_banneddate() {
  banneddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_banneddate();
}
inline const ::std::string& BannedUser::banneddate() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
  return banneddate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BannedUser::set_banneddate(const ::std::string& value) {
  set_has_banneddate();
  banneddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
}
inline void BannedUser::set_banneddate(const char* value) {
  set_has_banneddate();
  banneddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
}
inline void BannedUser::set_banneddate(const char* value, size_t size) {
  set_has_banneddate();
  banneddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
}
inline ::std::string* BannedUser::mutable_banneddate() {
  set_has_banneddate();
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
  return banneddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BannedUser::release_banneddate() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
  clear_has_banneddate();
  return banneddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BannedUser::set_allocated_banneddate(::std::string* banneddate) {
  if (banneddate != NULL) {
    set_has_banneddate();
  } else {
    clear_has_banneddate();
  }
  banneddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), banneddate);
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Models.BannedUser.bannedDate)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BannedUser_2eproto__INCLUDED
