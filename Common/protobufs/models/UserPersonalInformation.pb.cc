// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserPersonalInformation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserPersonalInformation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* UserPersonalInformation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserPersonalInformation_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UserPersonalInformation_2eproto() {
  protobuf_AddDesc_UserPersonalInformation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UserPersonalInformation.proto");
  GOOGLE_CHECK(file != NULL);
  UserPersonalInformation_descriptor_ = file->message_type(0);
  static const int UserPersonalInformation_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, firstname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, lastname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, mobilenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, businessnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, sip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, jobtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, country_),
  };
  UserPersonalInformation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserPersonalInformation_descriptor_,
      UserPersonalInformation::default_instance_,
      UserPersonalInformation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserPersonalInformation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserPersonalInformation));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UserPersonalInformation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserPersonalInformation_descriptor_, &UserPersonalInformation::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UserPersonalInformation_2eproto() {
  delete UserPersonalInformation::default_instance_;
  delete UserPersonalInformation_reflection_;
}

void protobuf_AddDesc_UserPersonalInformation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035UserPersonalInformation.proto\"\327\001\n\027User"
    "PersonalInformation\022\n\n\002id\030\001 \001(\005\022\016\n\006userI"
    "d\030\002 \001(\005\022\021\n\tfirstName\030\003 \001(\t\022\020\n\010lastName\030\004"
    " \001(\t\022\024\n\014mobileNumber\030\005 \001(\t\022\026\n\016businessNu"
    "mber\030\006 \001(\t\022\013\n\003sip\030\007 \001(\t\022\020\n\010jobTitle\030\010 \001("
    "\t\022\017\n\007address\030\t \001(\t\022\014\n\004city\030\n \001(\t\022\017\n\007coun"
    "try\030\013 \001(\t", 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserPersonalInformation.proto", &protobuf_RegisterTypes);
  UserPersonalInformation::default_instance_ = new UserPersonalInformation();
  UserPersonalInformation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UserPersonalInformation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UserPersonalInformation_2eproto {
  StaticDescriptorInitializer_UserPersonalInformation_2eproto() {
    protobuf_AddDesc_UserPersonalInformation_2eproto();
  }
} static_descriptor_initializer_UserPersonalInformation_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UserPersonalInformation::kIdFieldNumber;
const int UserPersonalInformation::kUserIdFieldNumber;
const int UserPersonalInformation::kFirstNameFieldNumber;
const int UserPersonalInformation::kLastNameFieldNumber;
const int UserPersonalInformation::kMobileNumberFieldNumber;
const int UserPersonalInformation::kBusinessNumberFieldNumber;
const int UserPersonalInformation::kSipFieldNumber;
const int UserPersonalInformation::kJobTitleFieldNumber;
const int UserPersonalInformation::kAddressFieldNumber;
const int UserPersonalInformation::kCityFieldNumber;
const int UserPersonalInformation::kCountryFieldNumber;
#endif  // !_MSC_VER

UserPersonalInformation::UserPersonalInformation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserPersonalInformation::InitAsDefaultInstance() {
}

UserPersonalInformation::UserPersonalInformation(const UserPersonalInformation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserPersonalInformation::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  userid_ = 0;
  firstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lastname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mobilenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  businessnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  jobtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserPersonalInformation::~UserPersonalInformation() {
  SharedDtor();
}

void UserPersonalInformation::SharedDtor() {
  if (firstname_ != &::google::protobuf::internal::kEmptyString) {
    delete firstname_;
  }
  if (lastname_ != &::google::protobuf::internal::kEmptyString) {
    delete lastname_;
  }
  if (mobilenumber_ != &::google::protobuf::internal::kEmptyString) {
    delete mobilenumber_;
  }
  if (businessnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete businessnumber_;
  }
  if (sip_ != &::google::protobuf::internal::kEmptyString) {
    delete sip_;
  }
  if (jobtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete jobtitle_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    delete country_;
  }
  if (this != default_instance_) {
  }
}

void UserPersonalInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserPersonalInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserPersonalInformation_descriptor_;
}

const UserPersonalInformation& UserPersonalInformation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserPersonalInformation_2eproto();
  return *default_instance_;
}

UserPersonalInformation* UserPersonalInformation::default_instance_ = NULL;

UserPersonalInformation* UserPersonalInformation::New() const {
  return new UserPersonalInformation;
}

void UserPersonalInformation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    userid_ = 0;
    if (has_firstname()) {
      if (firstname_ != &::google::protobuf::internal::kEmptyString) {
        firstname_->clear();
      }
    }
    if (has_lastname()) {
      if (lastname_ != &::google::protobuf::internal::kEmptyString) {
        lastname_->clear();
      }
    }
    if (has_mobilenumber()) {
      if (mobilenumber_ != &::google::protobuf::internal::kEmptyString) {
        mobilenumber_->clear();
      }
    }
    if (has_businessnumber()) {
      if (businessnumber_ != &::google::protobuf::internal::kEmptyString) {
        businessnumber_->clear();
      }
    }
    if (has_sip()) {
      if (sip_ != &::google::protobuf::internal::kEmptyString) {
        sip_->clear();
      }
    }
    if (has_jobtitle()) {
      if (jobtitle_ != &::google::protobuf::internal::kEmptyString) {
        jobtitle_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    if (has_city()) {
      if (city_ != &::google::protobuf::internal::kEmptyString) {
        city_->clear();
      }
    }
    if (has_country()) {
      if (country_ != &::google::protobuf::internal::kEmptyString) {
        country_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserPersonalInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        break;
      }

      // optional int32 userId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_firstName;
        break;
      }

      // optional string firstName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firstName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->firstname().data(), this->firstname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_lastName;
        break;
      }

      // optional string lastName = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lastName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lastname().data(), this->lastname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_mobileNumber;
        break;
      }

      // optional string mobileNumber = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mobileNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobilenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mobilenumber().data(), this->mobilenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_businessNumber;
        break;
      }

      // optional string businessNumber = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_businessNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_businessnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->businessnumber().data(), this->businessnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_sip;
        break;
      }

      // optional string sip = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sip().data(), this->sip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_jobTitle;
        break;
      }

      // optional string jobTitle = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jobTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobtitle().data(), this->jobtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_address;
        break;
      }

      // optional string address = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_city;
        break;
      }

      // optional string city = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_country;
        break;
      }

      // optional string country = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserPersonalInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string firstName = 3;
  if (has_firstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->firstname(), output);
  }

  // optional string lastName = 4;
  if (has_lastname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->lastname(), output);
  }

  // optional string mobileNumber = 5;
  if (has_mobilenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mobilenumber().data(), this->mobilenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->mobilenumber(), output);
  }

  // optional string businessNumber = 6;
  if (has_businessnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businessnumber().data(), this->businessnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->businessnumber(), output);
  }

  // optional string sip = 7;
  if (has_sip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sip().data(), this->sip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->sip(), output);
  }

  // optional string jobTitle = 8;
  if (has_jobtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobtitle().data(), this->jobtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->jobtitle(), output);
  }

  // optional string address = 9;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->address(), output);
  }

  // optional string city = 10;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->city(), output);
  }

  // optional string country = 11;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->country(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserPersonalInformation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 userId = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string firstName = 3;
  if (has_firstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->firstname(), target);
  }

  // optional string lastName = 4;
  if (has_lastname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lastname(), target);
  }

  // optional string mobileNumber = 5;
  if (has_mobilenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mobilenumber().data(), this->mobilenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mobilenumber(), target);
  }

  // optional string businessNumber = 6;
  if (has_businessnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->businessnumber().data(), this->businessnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->businessnumber(), target);
  }

  // optional string sip = 7;
  if (has_sip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sip().data(), this->sip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sip(), target);
  }

  // optional string jobTitle = 8;
  if (has_jobtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobtitle().data(), this->jobtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->jobtitle(), target);
  }

  // optional string address = 9;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->address(), target);
  }

  // optional string city = 10;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->city(), target);
  }

  // optional string country = 11;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->country(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserPersonalInformation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 userId = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string firstName = 3;
    if (has_firstname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firstname());
    }

    // optional string lastName = 4;
    if (has_lastname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lastname());
    }

    // optional string mobileNumber = 5;
    if (has_mobilenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mobilenumber());
    }

    // optional string businessNumber = 6;
    if (has_businessnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->businessnumber());
    }

    // optional string sip = 7;
    if (has_sip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sip());
    }

    // optional string jobTitle = 8;
    if (has_jobtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobtitle());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string address = 9;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string city = 10;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string country = 11;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserPersonalInformation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserPersonalInformation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserPersonalInformation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserPersonalInformation::MergeFrom(const UserPersonalInformation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_firstname()) {
      set_firstname(from.firstname());
    }
    if (from.has_lastname()) {
      set_lastname(from.lastname());
    }
    if (from.has_mobilenumber()) {
      set_mobilenumber(from.mobilenumber());
    }
    if (from.has_businessnumber()) {
      set_businessnumber(from.businessnumber());
    }
    if (from.has_sip()) {
      set_sip(from.sip());
    }
    if (from.has_jobtitle()) {
      set_jobtitle(from.jobtitle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_city()) {
      set_city(from.city());
    }
    if (from.has_country()) {
      set_country(from.country());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserPersonalInformation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserPersonalInformation::CopyFrom(const UserPersonalInformation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserPersonalInformation::IsInitialized() const {

  return true;
}

void UserPersonalInformation::Swap(UserPersonalInformation* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(userid_, other->userid_);
    std::swap(firstname_, other->firstname_);
    std::swap(lastname_, other->lastname_);
    std::swap(mobilenumber_, other->mobilenumber_);
    std::swap(businessnumber_, other->businessnumber_);
    std::swap(sip_, other->sip_);
    std::swap(jobtitle_, other->jobtitle_);
    std::swap(address_, other->address_);
    std::swap(city_, other->city_);
    std::swap(country_, other->country_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserPersonalInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserPersonalInformation_descriptor_;
  metadata.reflection = UserPersonalInformation_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
