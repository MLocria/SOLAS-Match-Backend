// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskScoreEmail.proto

#ifndef PROTOBUF_TaskScoreEmail_2eproto__INCLUDED
#define PROTOBUF_TaskScoreEmail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EmailMessage.pb.h"
// @@protoc_insertion_point(includes)

namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Emails {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_TaskScoreEmail_2eproto();
void protobuf_AssignDesc_TaskScoreEmail_2eproto();
void protobuf_ShutdownFile_TaskScoreEmail_2eproto();

class TaskScoreEmail;

// ===================================================================

class TaskScoreEmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail) */ {
 public:
  TaskScoreEmail();
  virtual ~TaskScoreEmail();

  TaskScoreEmail(const TaskScoreEmail& from);

  inline TaskScoreEmail& operator=(const TaskScoreEmail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskScoreEmail& default_instance();

  void Swap(TaskScoreEmail* other);

  // implements Message ----------------------------------------------

  inline TaskScoreEmail* New() const { return New(NULL); }

  TaskScoreEmail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskScoreEmail& from);
  void MergeFrom(const TaskScoreEmail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskScoreEmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1 [default = TaskScoreEmail];
  bool has_email_type() const;
  void clear_email_type();
  static const int kEmailTypeFieldNumber = 1;
  ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type email_type() const;
  void set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value);

  // required string body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail)
 private:
  inline void set_has_email_type();
  inline void clear_has_email_type();
  inline void set_has_body();
  inline void clear_has_body();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  int email_type_;
  friend void  protobuf_AddDesc_TaskScoreEmail_2eproto();
  friend void protobuf_AssignDesc_TaskScoreEmail_2eproto();
  friend void protobuf_ShutdownFile_TaskScoreEmail_2eproto();

  void InitAsDefaultInstance();
  static TaskScoreEmail* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskScoreEmail

// required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1 [default = TaskScoreEmail];
inline bool TaskScoreEmail::has_email_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskScoreEmail::set_has_email_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskScoreEmail::clear_has_email_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskScoreEmail::clear_email_type() {
  email_type_ = 1;
  clear_has_email_type();
}
inline ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type TaskScoreEmail::email_type() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.email_type)
  return static_cast< ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type >(email_type_);
}
inline void TaskScoreEmail::set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value) {
  assert(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type_IsValid(value));
  set_has_email_type();
  email_type_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.email_type)
}

// required string body = 2;
inline bool TaskScoreEmail::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskScoreEmail::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskScoreEmail::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskScoreEmail::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& TaskScoreEmail::body() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskScoreEmail::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
}
inline void TaskScoreEmail::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
}
inline void TaskScoreEmail::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
}
inline ::std::string* TaskScoreEmail::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskScoreEmail::release_body() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskScoreEmail::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Emails.TaskScoreEmail.body)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Emails
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TaskScoreEmail_2eproto__INCLUDED
